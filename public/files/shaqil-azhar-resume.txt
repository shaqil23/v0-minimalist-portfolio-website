Shakil Mardhika Azhar 
mardhikazhar@gmail.com | 087878181633 | Jakarta, Indonesia  
github.com/shaqil23 | linkedin.com/shakil 
 
Summary 
Experience in data-driven academic projects has been gained, along with a strong foundation in various 
programming languages and technology concepts. An interest in learning and pursuing a career as a junior 
data analyst has been developed. Knowledge has been expanded through seminars and webinars to stay 
updated on the latest industry trends. Additionally, teamwork skills, especially in group projects, have 
been cultivated. 

Education 
Undergraduate in Computer Science, Esa Unggul University (2022 – Present) 
GPA; 3.70/4.0 
Relevant Coursework: Algorithm, Data Structure, Database Systems, Mobile App Development, Data 
Mining, Data Warehouse. 

Technical Skills 
• Languages: Python (Intermediate), MATLAB (Intermediate), SQL (Intermediate). 
• Data Technologies: Pandas, NumPy, Matplotlib, Seaborn, Scikit-Learn. 
• Databases: MySQL, MongoDB, Firebase, PostgreSQL. 
• Tools: Jupyter Notebook, Tableau, Power BI, Excel, Git, Docker (Intermediate). 
• Methodologies: ETL, Data Cleaning, Data Visualization, A/B Testing, Agile/Scrum. 

Projects 
ElderHub – Elderly Care Technology-Based Service | Documents 
 
• Developed using Flutter for a cross-platform mobile application and Firebase as the primary backend. 
• Enables real-time elderly health monitoring, including automated medication reminders and 
  scheduled consultations with medical professionals
• Enhances accessibility with a senior-friendly interface designed through UX research and usability 
  testing. 
• Supports direct communication between seniors and healthcare providers through a real-time chat
  feature powered by Firebase Firestore. 
• Ensures data security with Firebase Authentication and encryption to protect users' medical
  information. 
• Optimized performance through Firebase Storage caching and reduced state rebuilds
  using efficient state management. 
• Implements machine learning to provide personalized care recommendations based on
  user behavior and health history. 

Alyoong Rent Car – Car Rental Information System (User & Admin Dashboard) | Documents 
• Developed a web-based platform to streamline the car rental process online. 
• Improved operational efficiency by automating booking, identity verification, and
  fleet management. 
• Reduced booking processing time with a real-time vehicle availability matching system. 
• Secured user data with encryption and multi-level authentication to protect personal information
  and transactions. 
• Enhanced navigation with an intuitive interface for a better user experience. 
• Integrated online payment systems and GPS-based vehicle tracking for seamless service. 
• Provided customer support through a built-in chat system for faster response times. 

Bookstore – Database System for Inventory and Sales Management | Documents 
• Built using a relational database system to manage information on books, publishers, employees, 
  orders, members, and transactions. 
• Improved operational efficiency by automating order recording, invoicing, and inventory
  management. 
• Reduced transaction processing time with real-time stock monitoring and low inventory
  notifications. 
• Secured user data with access authentication and encryption of sensitive information. 
• Simplified system navigation with an SQL-based interface for fast data manipulation
• Integrated order tracking and transaction history features to enhance user experience. 
• Minimized data loss risks with routine backups and automated data recovery strategies. 
 
Movie Recommendation System Using Cosine Similarity | Documents 
• Developed using Python and the scikit-learn library for data processing, with Flask as the primary
  backend. 
• Utilizes the cosine similarity method to measure the similarity between movies based on
  features such as genres, keywords, production companies, and taglines. 
• Processes data using the TF-IDF Vectorizer to convert movie information into numerical
  vectors, enabling accurate similarity calculations. 
• The backend, implemented with Flask, includes user authentication, movie search, movie
  ratings, and a personalized watchlist feature. 
• Users can add or remove movies from their watchlist and receive recommendations based on
  their interaction history. 
• System optimization is achieved through batch data processing to handle large datasets
  efficiently. 
• Testing results show that the cosine similarity method is effective in providing relevant movie
  recommendations and enhancing a more personalized viewing experience for users
 
Mini Project: Data Mall Customer Analysis and Clustering | Documents 
• Developed using Python with libraries such as Pandas, NumPy, Matplotlib, Seaborn, and Scikit-learn 
  for data analysis, visualization, and clustering. 
• Enables customer segmentation based on attributes like age, gender, annual income, and
  spending score using K-Means clustering. 
• Enhances data preprocessing by normalizing the dataset using MinMaxScaler to ensure
  accurate clustering results. 
• Supports data visualization through various plots (e.g., line plots, scatter plots) to identify
  patterns and trends in customer behavior. 
• Ensures data integrity by handling missing values and dropping irrelevant attributes (e.g.,
  CustomerID) to focus on meaningful features for clustering
• Optimizes clustering performance by determining the optimal number of clusters using the
  Elbow Method, which helps in identifying the best K value for K-Means clustering. 
• Implements machine learning to group customers into distinct clusters, allowing businesses to
  tailor marketing strategies and improve customer satisfaction based on segmented data. 
 
Mini Project: Property Sales Data Warehouse Trend Analysis | Documents 
• Developed using PostgreSQL for database management, Microsoft Power BI for data visualization, 
  and Visual Studio Code for development. 
• Processes property sales data from 2002 to 2018, covering residential and commercial
  properties with key attributes such as sale price, year built, location, and tax codes. 
• Implements an Extract, Transform, Load (ETL) process to clean and integrate raw data,
  ensuring consistency and accuracy for analysis.
• Utilizes a star schema structure to optimize query performance, reducing redundancy and
  maintaining a compact database size. 
• Fact and dimension tables are designed to support multi-dimensional analysis, enabling
  insights into sales trends, pricing fluctuations, and regional performance  
• Enhances accessibility with a structured Data Mart for streamlined reporting and performance
  monitoring. 
• Results demonstrate improved data reliability, faster analytical processing, and comprehensive
  market insights for strategic planning in the real estate sector. 

Experience 
Data Analyst Freelance | Jakarta | Aug 2024 – Present 
• Worked on various data analysis projects based on case studies from university, including data
  processing, visualization, and interpretation to generate actionable insights. 
• Developed predictive models using machine learning techniques to analyze trends and
  patterns in datasets. 
• Utilized SQL and Python for data extraction, transformation, and analysis to support data-
  driven decision-making. 

Additional Skills 
• Strong analytical and problem-solving skills, with experience in data processing, visualization, and
  statistical analysis. 
• Proficient in programming languages like Python, SQL, and R, with hands-on experience in data
  manipulation and machine learning. 
• Effective team player with strong collaboration and communication skills, adaptable to new
  technologies and methodologies. 
• Skilled in data visualization using tools like Tableau, Power BI, and Matplotlib to communicate
  insights effectively.
